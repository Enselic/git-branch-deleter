name: CI

on:
  workflow_call: # From .github/workflows/Release.yml
  workflow_dispatch:
  pull_request:
  push:
    branches: [main]

env:
  CARGO_TERM_COLOR: always

jobs:
  all-jobs:
    # We must use `always()`, because the default `success()` will evaluate to
    # `skipped` if a needed matrix job fails, and a required status check for a
    # job is considered OK if it is skipped. And since we use `always()`, we
    # must check the result of each job manually.
    if: always()
    name: all-jobs
    runs-on: ubuntu-latest
    needs:
      - cargo-fmt
      - cargo-doc
      - cargo-clippy
      - cargo-audit
      - cargo-deny
      - cargo-test
    steps:
      - run: |
          [ "${{ needs.cargo-fmt.result }}" = "success" ] &&
          [ "${{ needs.cargo-doc.result }}" = "success" ] &&
          [ "${{ needs.cargo-clippy.result }}" = "success" ] &&
          [ "${{ needs.cargo-audit.result }}" = "success" ] &&
          [ "${{ needs.cargo-deny.result }}" = "success" ] &&
          [ "${{ needs.cargo-test.result }}" = "success" ] &&
          echo "All dependent jobs were successful"

  cargo-fmt:
    name: cargo fmt -- --check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: cargo fmt -- --check

  cargo-doc:
    name: RUSTDOCFLAGS='--deny warnings' cargo doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - run: RUSTDOCFLAGS='--deny warnings' cargo doc --locked --no-deps --document-private-items

  cargo-clippy:
    name: cargo clippy -- --deny clippy::all --deny clippy::pedantic ...
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - run: scripts/cargo-clippy.sh

  cargo-audit:
    name: cargo audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: scripts/cargo-audit.sh

  cargo-deny:
    name: cargo deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: EmbarkStudios/cargo-deny-action@v1

  cargo-test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
    name: cargo test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
      - run: cargo test --locked
